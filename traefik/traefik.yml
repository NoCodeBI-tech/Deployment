apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-role
rules:
- apiGroups: [ "" ]
  resources: [ "services", "endpoints", "secrets" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
- apiGroups: [ "networking.k8s.io" ]
  resources: [ "ingresses", "ingressclasses" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
- apiGroups: [ "traefik.io", "traefik.containo.us" ]
  resources: [ "*" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
- kind: ServiceAccount
  name: traefik-sa
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-sa
      containers:
      - name: traefik
        image: traefik:v2.10
        args:
        - "--api.dashboard=true"
        - "--api.insecure=true"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.websecure.address=:443"
        - "--entrypoints.traefik.address=:8080"
        - "--providers.kubernetesingress=true"
        - "--providers.kubernetescrd=true"
        ports:
        - name: web
          containerPort: 80
        - name: websecure
          containerPort: 443
        - name: admin
          containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: traefik
  ports:
  - name: web
    port: 80
    targetPort: web
  - name: websecure
    port: 443
    targetPort: websecure
  - name: admin
    port: 8080
    targetPort: admin

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  rules:
  - host: console.nocodebi.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traefik
            port:
              number: 80
  tls:
  - hosts:
    - '*.nocodebi.io'
    secretName: wildcard-tls-secret
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik
  namespace: default
spec:
  controller: traefik.io/ingress-controller
